#Assignment 3
#Author: Callis, Suzi 
#Date: 09/05/2025

#Question 1

#Question 2
#cd ~/Desktop/"UNC"/"BIOS 512"
#git clone https://github.com/scallis24/CallisBIOS512.git
#git status

#Question 3 
#I used my exisiting key (id_ed25519) which is in my Github as "Mac Key"
#ssh-add ~/.ssh/id_ed25519
#git remote add origin git@github.com:scallis24/CallisBIOS512.git
#git push -u origin main

#Question 4
#a)
#mkdir HW2
#echo "This is for homework 2." > HW2/HW2.md
#b)
#git add HW2/HW2.md
#git status
#On branch main
#Your branch is up to date with 'origin/main'.
#Changes to be committed:
#  (use "git restore --staged <file>..." to unstage)
#	new file:   HW2/HW2.md
#c)
git commit -m "Add HW2.md for homework 2"
#d)
#cat <<EOF > HW2/HW2.md
# HW 2
#This is for homework 2.
#EOF
#e)
#git diff
#diff --git a/HW2/HW2.md b/HW2/HW2.md
#index 1a010d3..f229136 100644
#--- a/HW2/HW2.md
#+++ b/HW2/HW2.md
#@@ -1 +1,3 @@
#+# HW 2
#+
# This is for homework 2.
#f)
#git status
#On branch main
#Your branch is ahead of 'origin/main' by 1 commit.
#  (use "git push" to publish your local commits)

#Changes not staged for commit:
#  (use "git add <file>..." to update what will be committed)
#  (use "git restore <file>..." to discard changes in working directory)
#	modified:   HW2/HW2.md

#Untracked files:
#  (use "git add <file>..." to include in what will be committed)
#	HW2/.Rhistory

#no changes added to commit (use "git add" and/or "git commit -a")
#Suzis-MBP:CallisBIOS512 suzicallis$ 
#g)
#git add HW2/HW2.md
#git commit -m "Add title to HW2.md"
#git log
#commit c1f23c4699ff3b1ca47d10ff2b62e0066af5c27e (HEAD -> main)
#Author: scallis24 <scallis@unc.edu>
#Date:   Fri Sep 5 17:37:53 2025 -0400

#    Add title to HW2.md

#commit 39a4e0280591b80d6bd3136311e80cc8e64702bd
#Author: scallis24 <scallis@unc.edu>
#Date:   Fri Sep 5 17:22:13 2025 -0400

#    Add HW2.md for homework 2

#commit ea58c8b208ebfb291d805745be8d5c6e959ccbad (origin/main, origin/HEAD)
#Author: scallis24 <scallis@unc.edu>
#Date:   Thu Sep 4 14:59:58 2025 -0400

#    Create Homework3.ipynp

#commit 6132de5754ba6871f0eb6c7e041887f6bfaba8f8
#Author: scallis24 <scallis@unc.edu>
#Date:   Thu Sep 4 14:59:20 2025 -0400

#    Add files via upload
#h)
#git help
#git help log 
#git help show
#Description: --since=<date>, --after=<date> Show commits more recent than a specific date.

library(tidyverse)
if (!dir.exists("intermediate")) dir.create("intermediate", recursive = TRUE)
if (!exists("mdpre")) mdpre <- function(x) { print(x) }
if (!exists("ggmd"))  ggmd  <- function(p) { print(p) }
library(lubricate)

#5
#patient_names <- read_csv("homework/Assignment3/patient_names.csv")
#patient_properties <- read_csv("homework/Assignment3/patient_properties.csv")
#patient_names$BIRTHDATE <- as.Date(patient_names$BIRTHDATE, format = "%m/%d/%Y")
#patient_names$DEATHDATE <- as.Date(patient_names$DEATHDATE, format = "%m/%d/%Y")
#head(patient_names$BIRTHDATE, 10)
#head(patient_names$DEATHDATE, 10)

#6
#patient_properties_wide <- patient_properties %>%
#  pivot_wider(
#    id_cols = ID,
#    names_from = property,
#    values_from = value,
#    values_fn = ~ .x[1]
#  )
#mdpre(head(patient_properties_wide, 10))

#7
#patient_full <- left_join(patient_names, patient_properties_wide, by = "ID")
#mdpre(head(patient_full, 10))

#8CHECK
#simplify_strings <- function(s) {
#  s %>%
#    str_to_lower() %>%
#    str_trim() %>%
#    str_replace_all("[^a-z1-9]+", "_") %>%
#    str_replace_all("^_+", "") %>%
#    str_replace_all("_+$", "")
#}
#patient_full <- patient_full %>%
#  mutate(
#    FIRST = simplify_strings(iconv(str_replace_all(FIRST, "\\d+", ""), from = "UTF-8", to = "Windows-1252")),
#    LAST  = simplify_strings(iconv(str_replace_all(LAST, "\\d+", ""), from = "UTF-8", to = "Windows-1252"))
#  )
#mdpre(head(patient_full, 10))

#9CHECK
#cols_to_count <- c("CITY", "STATE", "MARITAL", "RACE", "ETHNICITY", "GENDER")

#for (col in cols_to_count) {
#  cat("\n###", col, "\n")
  
#  counts <- patient_full %>%
#    count(.data[[col]]) %>%
#    arrange(desc(n))
  
#  mdpre(counts)
#}

#10
non_erroneous_marital <- c("M", "S")
tidied_data <- patient_full %>%
  filter(MARITAL %in% non_erroneous_marital)

tidied_data <- tidied_data %>%
  mutate(RACE = ifelse(RACE == "asiann", "asian", RACE))

tidied_data <- tidied_data %>%
  mutate(ETHNICITY = case_when(
    ETHNICITY == "nonhispani" ~ "nonhispanic",
    ETHNICITY == "hispani" ~ "hispanic",
    ETHNICITY == "nonhispanic" ~ "nonhispanic",
    ETHNICITY == "hispanic" ~ "hispanic",
    TRUE ~ ETHNICITY
  ))

tidied_data <- tidied_data %>%
  mutate(GENDER = str_to_lower(GENDER)) %>%
  mutate(GENDER = case_when(
    GENDER %in% c("m", "male") ~ "male",
    GENDER %in% c("f", "female") ~ "female",
    TRUE ~ GENDER
  ))

fix_dates <- function(date_col) {
  parsed <- ymd(date_col)
  corrected <- if_else(year(parsed) > year(Sys.Date()), parsed %m-% years(100), parsed)
  return(corrected)
}

tidied_data <- tidied_data %>%
  mutate(
    BIRTHDATE = fix_dates(BIRTHDATE),
    DEATHDATE = fix_dates(DEATHDATE)
  )

tidied_data <- tidied_data %>%
  mutate(
    swap_needed = !is.na(DEATHDATE) & BIRTHDATE > DEATHDATE,
    
    new_birthdate = if_else(swap_needed, DEATHDATE, BIRTHDATE),
    new_deathdate = if_else(swap_needed, BIRTHDATE, DEATHDATE)
  ) %>%
  select(-swap_needed) %>%
  mutate(
    BIRTHDATE = new_birthdate,
    DEATHDATE = new_deathdate
  ) %>%
  select(-new_birthdate, -new_deathdate)

tidied_data <- tidied_data %>%
  drop_na()

mdpre(tidied_data %>% count(GENDER))
mdpre(tidied_data %>% count(ETHNICITY))
mdpre(tidied_data %>% count(RACE))
mdpre(tidied_data %>% count(MARITAL))

#date_summary <- tibble(
     Column = c("BIRTHDATE", "DEATHDATE"),
     Start = c(
         format(min(tidied_data$BIRTHDATE), "%Y-%m-%d"),
         format(min(tidied_data$DEATHDATE), "%Y-%m-%d")
     ),
     End = c(
         format(max(tidied_data$BIRTHDATE), "%Y-%m-%d"),
         format(max(tidied_data$DEATHDATE), "%Y-%m-%d")
     )
 )
mdpre(date_summary)

#11
tidied_data <- tidied_data %>%
  mutate(
    AGE = as.numeric(
      difftime(
        if_else(is.na(DEATHDATE), Sys.Date(), DEATHDATE),
        BIRTHDATE,
        units = "days"
      )
    ) %/% 365
  )

print(
  ggmd(
    ggplot(tidied_data %>% filter(GENDER %in% c("male", "female")),
           aes(x = AGE, fill = GENDER)) +
      geom_histogram(binwidth = 5, position = "dodge", color = "black") +
      labs(x = "Age (years)", y = "Count", title = "Histogram of Ages by Gender") +
      theme_minimal()
  )
)

#12
ggmd(
  ggplot(
    tidied_data %>%
      filter(MARITAL %in% c("M", "S")) %>%
      mutate(MARITAL = recode(MARITAL, M = "Married", S = "Single")),
    aes(x = MARITAL, y = BIRTHDATE)
  ) +
    geom_point(aes(color = MARITAL), alpha = 0.6, position = position_jitter(width = 0.2, height = 0)) +
    labs(x = "Marital Status", y = "Birthdate", title = "Scatterplot of Birthdate by Marital Status") +
    theme_minimal()
)
